{
  "API-Docs Template": {
    "prefix": "qapi",
    "description": "API-Docs template",
    "scope": "yaml",
    "body": [
      "openapi: 3.0.2",
      "info:",
      "\ttitle: API",
      "\tversion: 1.0.0",
      "servers:",
      "\t- url: http://localhost:3100",
      "components:",
      "\tschemas:",
      "\t\t${TM_FILENAME/([^.]+).*/${1:/pascalcase}/}Input:",
      "\t\t\ttype: object",
      "\t\t\tproperties:",
      "\t\t\t\tidValor:",
      "\t\t\t\t\ttype: integer",
      "\t\t\t\ttexto:",
      "\t\t\t\t\ttype: string",
      "\t\t\t\testado:",
      "\t\t\t\t\ttype: boolean",
      "paths:",
      "\t$1"
    ]
  },
  "GET Template": {
    "prefix": "qget",
    "description": "GET template",
    "scope": "yaml",
    "body": [
      "/${1:endpoint}:",
      "\tget:",
      "\t\ttags:",
      "\t\t\t- ${2:Valores}",
      "\t\tsummary: Listar ${3:valores}",
      "\t\tresponses:",
      "\t\t\t200:",
      "\t\t\t\tdescription: Listado correctamente",
      "\t\t\t\tcontent:",
      "\t\t\t\t\tapplication/json:",
      "\t\t\t\t\t\tschema:",
      "\t\t\t\t\t\t\t\\$ref: '#/components/schemas/${4:${TM_FILENAME/([^.]+).*/${1:/pascalcase}/}}Output'"
    ]
  },
  "GET ID Template": {
    "prefix": "qgetid",
    "description": "GET ID template",
    "scope": "yaml",
    "body": [
      "/${1:endpoint}/{${2:idValor}}:",
      "\tget:",
      "\t\ttags:",
      "\t\t\t- ${3:Valores}",
      "\t\tsummary: Buscar ${4:valor} por ID",
      "\t\tparameters:",
      "\t\t\t- in: path",
      "\t\t\t\tname: ${2:idValor}",
      "\t\t\t\tschema:",
      "\t\t\t\t\ttype: integer",
      "\t\t\t\trequired: true",
      "\t\t\t\tdescription: ID de ${4:valor}",
      "\t\tresponses:",
      "\t\t\t200:",
      "\t\t\t\tdescription: ID encontrado",
      "\t\t\t\tcontent:",
      "\t\t\t\t\tapplication/json:",
      "\t\t\t\t\t\tschema:",
      "\t\t\t\t\t\t\t\\$ref: '#/components/schemas/${5:${TM_FILENAME/([^.]+).*/${1:/pascalcase}/}}Output'",
      "\t\t\t404:",
      "\t\t\t\tdescription: ID no encontrado"
    ]
  },
  "POST Template": {
    "prefix": "qpost",
    "description": "POST template",
    "scope": "yaml",
    "body": [
      "/${1:endpoint}:",
      "\tpost:",
      "\t\ttags:",
      "\t\t\t- ${2:Valor}",
      "\t\tsummary: Crear ${3:valor}",
      "\t\trequestBody:",
      "\t\t\trequired: true",
      "\t\t\tcontent:",
      "\t\t\t\tapplication/json:",
      "\t\t\t\t\tschema: ",
      "\t\t\t\t\t\t\\$ref: '#/components/schemas/${4:${TM_FILENAME/([^.]+).*/${1:/pascalcase}/}}Input'",
      "\t\tresponses:",
      "\t\t\t200:",
      "\t\t\t\tdescription: Creado correctamente",
      "\t\t\t\tcontent:",
      "\t\t\t\t\tapplication/json:",
      "\t\t\t\t\t\tschema:",
      "\t\t\t\t\t\t\t\\$ref: '#/components/schemas/${5:${TM_FILENAME/([^.]+).*/${1:/pascalcase}/}}Output'",
      "\t\t\t409:",
      "\t\t\t\tdescription: ID ya se encuentra registrado"
    ]
  },
  "PUT Template": {
    "prefix": "qput",
    "description": "PUT template",
    "scope": "yaml",
    "body": [
      "/${1:endpoint}/{${2:idValor}}:",
      "\tput:",
      "\t\ttags:",
      "\t\t\t- ${3:Valor}",
      "\t\tsummary: Actualizar ${4:valor} por ID",
      "\t\tparameters:",
      "\t\t\t- in: path",
      "\t\t\t\tname: ${2:idValor}",
      "\t\t\t\tschema:",
      "\t\t\t\t\ttype: integer",
      "\t\t\t\trequired: true",
      "\t\t\t\tdescription: ID de ${4:valor}",
      "\t\trequestBody:",
      "\t\t\trequired: true",
      "\t\t\tcontent:",
      "\t\t\t\tapplication/json:",
      "\t\t\t\t\tschema: ",
      "\t\t\t\t\t\t\\$ref: '#/components/schemas/${5:${TM_FILENAME/([^.]+).*/${1:/pascalcase}/}}Input'",
      "\t\tresponses:",
      "\t\t\t200:",
      "\t\t\t\tdescription: Actualizado correctamente",
      "\t\t\t\tcontent:",
      "\t\t\t\t\tapplication/json:",
      "\t\t\t\t\t\tschema:",
      "\t\t\t\t\t\t\t\\$ref: '#/components/schemas/${6:${TM_FILENAME/([^.]+).*/${1:/pascalcase}/}}Output'",
      "\t\t\t404:",
      "\t\t\t\tdescription: ID no encontrado",
      "\t\t\t409:",
      "\t\t\t\tdescription: Atributo que debe ser único ya existe"
    ]
  },
  "PATCH Template": {
    "prefix": "qpatch",
    "description": "PATCH template",
    "scope": "yaml",
    "body": [
      "/${1:endpoint}/{${2:idValor}}:",
      "\tpatch:",
      "\t\ttags:",
      "\t\t\t- ${3:Valor}",
      "\t\tsummary: Actualizar estado ${4:valor} por ID",
      "\t\tparameters:",
      "\t\t\t- in: path",
      "\t\t\t\tname: ${2:idValor}",
      "\t\t\t\tschema:",
      "\t\t\t\t\ttype: integer",
      "\t\t\t\trequired: true",
      "\t\t\t\tdescription: ID de ${4:valor}",
      "\t\trequestBody:",
      "\t\t\trequired: true",
      "\t\t\tcontent:",
      "\t\t\t\tapplication/json:",
      "\t\t\t\t\tschema: ",
      "\t\t\t\t\t\ttype: object",
      "\t\t\t\t\t\trequired:",
      "\t\t\t\t\t\t\t- estadoRegistro",
      "\t\t\t\t\t\tproperties:",
      "\t\t\t\t\t\t\testadoRegistro:",
      "\t\t\t\t\t\t\t\ttype: boolean",
      "\t\t\t\t\t\t\t\texample: false",
      "\t\tresponses:",
      "\t\t\t200:",
      "\t\t\t\tdescription: Estado actualizado correctamente",
      "\t\t\t\tcontent:",
      "\t\t\t\t\tapplication/json:",
      "\t\t\t\t\t\tschema:",
      "\t\t\t\t\t\t\t\\$ref: '#/components/schemas/${5:${TM_FILENAME/([^.]+).*/${1:/pascalcase}/}}Output'",
      "\t\t\t404:",
      "\t\t\t\tdescription: ID no encontrado"
    ]
  },
  "DELETE Template": {
    "prefix": "qdel",
    "description": "DELETE template",
    "scope": "yaml",
    "body": [
      "/${1:endpoint}/{${2:idValor}}:",
      "\tdelete:",
      "\t\ttags:",
      "\t\t\t- ${3:Valor}",
      "\t\tsummary: Eliminar ${4:valor} por ID",
      "\t\tparameters:",
      "\t\t\t- in: path",
      "\t\t\t\tname: ${2:idValor}",
      "\t\t\t\tschema:",
      "\t\t\t\t\ttype: integer",
      "\t\t\t\trequired: true",
      "\t\t\t\tdescription: ID de ${4:valor}",
      "\t\tresponses:",
      "\t\t\t200:",
      "\t\t\t\tdescription: Eliminado correctamente",
      "\t\t\t\tcontent:",
      "\t\t\t\t\tapplication/json:",
      "\t\t\t\t\t\tschema:",
      "\t\t\t\t\t\t\t\\$ref: '#/components/schemas/${5:${TM_FILENAME/([^.]+).*/${1:/pascalcase}/}}Output'",
      "\t\t\t404:",
      "\t\t\t\tdescription: ID no encontrado"
      "\t\t\t409:",
      "\t\t\t\tdescription: Elemento a eliminar está siendo usado"
    ]
}
