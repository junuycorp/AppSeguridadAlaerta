generator client {
  provider = "prisma-client-js"
  output   = "../../../../node_modules/@prisma-agente/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Configuracion {
  clave             String   @id @db.VarChar(50)
  valor             String   @db.VarChar(200)
  fechaCreacion     DateTime @default(now()) @map("fecha_creacion")
  fechaModificacion DateTime @updatedAt @map("fecha_modificacion")

  @@map("configuracion")
}

model CuentaUsuario {
  nroDocumento       String            @id @map("nro_documento") @db.VarChar(20)
  contrasena         String            @db.VarChar(128)
  correo             String?           @unique @db.VarChar(35)
  numeroCelular      String?           @unique @map("numero_celular") @db.VarChar(11)
  correoVerificado   Boolean           @default(false) @map("correo_verificado")
  celularVerificado  Boolean           @default(false) @map("celular_verificado")
  preguntaSecreta    String?           @map("pregunta_secreta") @db.VarChar(60)
  respuesta          String?           @db.VarChar(60)
  contrasenaAnterior String?           @map("contrasena_old") @db.VarChar(128)
  perfilCodigo       Int               @map("perfil_codigo")
  estadoRegistro     Boolean           @default(true) @map("estado_registro")
  fechaCreacion      DateTime          @default(now()) @map("fecha_creacion")
  fechaModificacion  DateTime          @updatedAt @map("fecha_modificacion")
  persona            Persona?          @relation(fields: [nroDocumento], references: [nroDocumento])
  perfil             Perfil            @relation(fields: [perfilCodigo], references: [perfilCodigo])
  incidenteSereno    IncidenteSereno[]
  informe            Informe[]

  @@map("cuenta_usuario")
}

model ListaMenu {
  menuCodigo        String     @map("menu_codigo") @db.VarChar(6)
  perfilCodigo      Int        @map("perfil_codigo")
  nivelAcceso       Int        @map("nivel_acceso")
  fechaCreacion     DateTime   @default(now()) @map("fecha_creacion")
  fechaModificacion DateTime   @updatedAt @map("fecha_modificacion")
  menuAcceso        MenuAcceso @relation(fields: [menuCodigo], references: [menuCodigo])
  perfil            Perfil     @relation(fields: [perfilCodigo], references: [perfilCodigo])

  @@id([menuCodigo, perfilCodigo])
  @@map("lista_menu")
}

model MenuAcceso {
  menuCodigo        String      @id @map("menu_codigo") @db.VarChar(6)
  nombre            String      @db.VarChar(60)
  descripcion       String      @db.VarChar(150)
  subSistema        String      @map("sub_sistema") @db.VarChar(60)
  nivel             Int
  tipoModulo        String?     @map("tipo_modulo") @db.VarChar(60)
  ruta              String?     @db.VarChar(100)
  icono             String?     @db.VarChar(60)
  ambitoAcceso      String?     @map("ambito_acceso") @db.VarChar(15)
  mostrarEnMenu     Boolean?    @default(true) @map("mostrar_en_menu")
  estadoRegistro    Boolean     @default(true) @map("estado_registro")
  fechaCreacion     DateTime    @default(now()) @map("fecha_creacion")
  fechaModificacion DateTime    @updatedAt @map("fecha_modificacion")
  listaMenu         ListaMenu[]

  @@map("menu_acceso")
}

model Nacionalidad {
  idNacionalidad Int       @id @default(autoincrement()) @map("id_nacionalidad")
  codPlame       String?   @unique @map("cod_plame") @db.VarChar(4)
  pais           String?   @db.VarChar(50)
  persona        Persona[]

  @@map("nacionalidad")
}

model Perfil {
  perfilCodigo      Int             @id @default(autoincrement()) @map("perfil_codigo")
  perfilNombre      String?         @map("perfil_nombre") @db.VarChar(100)
  descripcion       String?         @db.VarChar(200)
  icono             String?         @db.VarChar(20)
  notificarEvento   Boolean?        @default(true) @map("notificar_evento")
  estadoRegistro    Boolean         @default(true) @map("estado_registro")
  fechaCreacion     DateTime        @default(now()) @map("fecha_creacion")
  fechaModificacion DateTime        @updatedAt @map("fecha_modificacion")
  cuentaUsuario     CuentaUsuario[]
  listaMenu         ListaMenu[]

  @@map("perfil")
}

model Persona {
  nroDocumento       String          @id @map("nro_documento") @db.VarChar(20)
  idTipoDocumento    Int             @map("id_tipo_documento")
  idTipoPersona      Int             @map("id_tipo_persona")
  razonSocial        String          @map("razon_social") @db.VarChar(70)
  nombres            String?         @db.VarChar(30)
  apellidoPaterno    String?         @map("apellido_paterno") @db.VarChar(25)
  apellidoMaterno    String?         @map("apellido_materno") @db.VarChar(25)
  fechaNacimiento    DateTime?       @map("fecha_nacimiento") @db.Date
  sexo               String?         @db.VarChar(1)
  codigoUbigeo       String?         @map("codigo_ubigeo") @db.VarChar(6)
  idNacionalidad     Int?            @map("id_nacionalidad")
  estadoRegistro     Boolean         @default(true) @map("estado_registro")
  usuarioCreador     String?         @map("usuario_creador") @db.VarChar(20)
  usuarioModificador String?         @map("usuario_modificador") @db.VarChar(20)
  fechaCreacion      DateTime        @default(now()) @map("fecha_creacion")
  fechaModificacion  DateTime        @updatedAt @map("fecha_modificacion")
  ubigeo             Ubigeo?         @relation(fields: [codigoUbigeo], references: [codigoUbigeo])
  nacionalidad       Nacionalidad?   @relation(fields: [idNacionalidad], references: [idNacionalidad])
  tipoDocumento      TipoDocumento   @relation(fields: [idTipoDocumento], references: [idTipoDocumento], onDelete: NoAction, onUpdate: NoAction)
  tipoPersona        TipoPersona?    @relation(fields: [idTipoPersona], references: [idTipoPersona], onDelete: NoAction, onUpdate: NoAction)
  cuentaUsuario      CuentaUsuario[]

  @@map("persona")
}

model TipoDocumento {
  idTipoDocumento  Int          @id @default(autoincrement()) @map("id_tipo_documento")
  desTipoDocumento String?      @map("des_tipo_documento") @db.VarChar(35)
  idTipoPersona    Int?         @map("id_tipo_persona")
  tipoPersona      TipoPersona? @relation(fields: [idTipoPersona], references: [idTipoPersona])
  persona          Persona[]

  @@map("tipo_documento")
}

model TipoPersona {
  idTipoPersona  Int             @id @default(autoincrement()) @map("id_tipo_persona")
  desTipoPersona String?         @map("des_tipo_persona") @db.VarChar(10)
  persona        Persona[]
  tipoDocumento  TipoDocumento[]

  @@map("tipo_persona")
}

model Ubigeo {
  codigoUbigeo    String    @id @map("codigo_ubigeo") @db.VarChar(6)
  distrito        String?   @db.VarChar(50)
  provincia       String?   @db.VarChar(50)
  departamento    String?   @db.VarChar(50)
  codDistrito     String?   @map("cod_distrito") @db.VarChar(2)
  codProvincia    String?   @map("cod_provincia") @db.VarChar(2)
  codDepartamento String?   @map("cod_departamento") @db.VarChar(2)
  persona         Persona[]

  @@map("ubigeo")
}

model Incidente {
  idIncidente       Int               @id @default(autoincrement()) @map("id_incidente")
  idDenunciante     String            @map("id_denunciante") @db.VarChar(20)
  idTipoIncidente   Int               @map("id_tipo_incidente")
  idCentroPoblado   Int?              @map("id_centro_poblado")
  descripcion       String            @db.Text
  estado            String            @default("PENDIENTE") // Valores: PENDIENTE, RECIBIDO, ASIGNADO, TERMIANDO
  subestado         String?           @db.VarChar(10) // NULL, ARCHIVADO, DERIVADO, DENUNCIADO, ATENDIDO
  activo            Boolean           @default(true)
  longitud          String
  latitud           String
  fechaCreacion     DateTime          @default(now()) @map("fecha_creacion")
  fechaRecepcion    DateTime?         @map("fecha_recepcion")
  fechaFinalizacion DateTime?         @map("fecha_finalizacion")
  archivoDigital    ArchivoDigital[]
  incidenteSereno   IncidenteSereno[]
  informe           Informe[]
  centroPoblado     CentroPoblado?    @relation(fields: [idCentroPoblado], references: [idCentroPoblado])
  tipoIncidente     TipoIncidente     @relation(fields: [idTipoIncidente], references: [idTipoIncidente])

  @@map("incidente")
}

model TipoIncidente {
  idTipoIncidente Int         @id @default(autoincrement()) @map("id_tipo_incidente")
  nombre          String      @db.VarChar(35)
  descripcion     String?     @db.Text
  colorMarcador   String      @default("#cb273a") @map("color_marcador") @db.VarChar(9)
  incidente       Incidente[]

  @@map("tipo_incidente")
}

model ArchivoDigital {
  idArchivo         Int       @id @default(autoincrement()) @map("id_archivo")
  idIncidente       Int       @map("id_incidente")
  ruta              String    @db.VarChar(40)
  tipo              String    @db.VarChar(12) // Valores: imagen, audio, video, doc-pdf...
  categoria         String    @db.VarChar(10) // Valores: DENUNCIA, INFORME
  fechaCreacion     DateTime  @default(now()) @map("fecha_creacion")
  fechaModificacion DateTime  @updatedAt @map("fecha_modificacion")
  incidente         Incidente @relation(fields: [idIncidente], references: [idIncidente])

  @@map("archivo_digital")
}

model IncidenteSereno {
  idIncidente     Int           @map("id_incidente")
  idSereno        String        @map("id_sereno") @db.VarChar(20)
  fechaAsignacion DateTime      @default(now()) @map("fecha_asignacion")
  incidente       Incidente     @relation(fields: [idIncidente], references: [idIncidente])
  sereno          CuentaUsuario @relation(fields: [idSereno], references: [nroDocumento])

  @@id([idIncidente, idSereno])
  @@map("incidente_sereno")
}

model Informe {
  idInforme         Int           @id @default(autoincrement()) @map("id_informe")
  idIncidente       Int           @map("id_incidente")
  idSereno          String        @map("id_sereno") @db.VarChar(20)
  descripcion       String?       @db.Text
  fechaCreacion     DateTime      @default(now()) @map("fecha_creacion")
  fechaModificacion DateTime      @updatedAt @map("fecha_modificacion")
  incidente         Incidente     @relation(fields: [idIncidente], references: [idIncidente])
  cuentaUsuario     CuentaUsuario @relation(fields: [idSereno], references: [nroDocumento])

  @@map("informe")
}

model CentroPoblado {
  idCentroPoblado Int         @id @default(autoincrement()) @map("id_centro_poblado")
  nombre          String      @db.VarChar(40)
  ubicacion       String?     @db.VarChar(100)
  extension       String?     @db.VarChar(50)
  incidente       Incidente[]

  @@map("centro_poblado")
}
